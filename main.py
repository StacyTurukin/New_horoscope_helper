import requests
from bs4 import BeautifulSoup
from datetime import datetime
from datetime import timedelta
import schedule
import time
import telebot
import re
import calendar

TOKEN = '6927115520:AAHuPb90D12VyV0czqWxhMlnmCyUZ6rV0I0'
CHANNEL_ID = '@horoscope_post'
TARO_BOT_USERNAME = '@RaskladTaroOnline_bot'
bot = telebot.TeleBot(TOKEN)

signs = {
    '   –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/',
                                   'selector': 'div.sign__description-text'},
    '‚ôà –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –û–≤–µ–Ω:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/aries/',
                                   'selector': 'div.sign__description-text'},
    '‚ôâ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –¢–µ–ª–µ—Ü:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/taurus/',
                                    'selector': 'div.sign__description-text'},
    '‚ôä –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –ë–ª–∏–∑–Ω–µ—Ü—ã:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/gemini/',
                                       'selector': 'div.sign__description-text'},
    '‚ôã –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –†–∞–∫:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/cancer/',
                                    'selector': 'div.sign__description-text'},
    '‚ôå –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –õ–µ–≤:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/leo/',
                                    'selector': 'div.sign__description-text'},
    '‚ôç –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –î–µ–≤–∞:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/virgo/',
                                    'selector': 'div.sign__description-text'},
    '‚ôé –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –í–µ—Å—ã:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/libra/',
                                    'selector': 'div.sign__description-text'},
    '‚ôè –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –°–∫–æ—Ä–ø–∏–æ–Ω:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/scorpio/',
                                    'selector': 'div.sign__description-text'},
    '‚ôê –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –°—Ç—Ä–µ–ª–µ—Ü:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/sagittarius/',
                                    'selector': 'div.sign__description-text'},
    '‚ôë –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –ö–æ–∑–µ—Ä–æ–≥:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/capricorn/',
                                    'selector': 'div.sign__description-text'},
    '‚ôí –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –í–æ–¥–æ–ª–µ–π:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/aquarius/',
                                    'selector': 'div.sign__description-text'},
    '‚ôì –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –†—ã–±—ã:': {'url': 'https://www.thevoicemag.ru/horoscope/daily/pisces/',
                                    'selector': 'div.sign__description-text'},
}

weekly_signs = {
    '‚ôà –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –û–≤–µ–Ω –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/aries/week/',
                                           'selector': '.article_prediction'},
    '‚ôâ –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –¢–µ–ª–µ—Ü –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/taurus/week/',
                                    'selector': '.article_prediction'},
    '‚ôä –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –ë–ª–∏–∑–Ω–µ—Ü—ã –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/gemini/week/',
                                       'selector': '.article_prediction'},
    '‚ôã –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –†–∞–∫ –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/cancer/week/',
                                    'selector': '.article_prediction'},
    '‚ôå –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –õ–µ–≤ –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/leo/week/',
                                    'selector': '.article_prediction'},
    '‚ôç –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –î–µ–≤–∞ –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/virgo/week/',
                                    'selector': '.article_prediction'},
    '‚ôé –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –í–µ—Å—ã –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/libra/week/',
                                    'selector': '.article_prediction'},
    '‚ôè –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –°–∫–æ—Ä–ø–∏–æ–Ω –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/scorpio/week/',
                                    'selector': '.article_prediction'},
    '‚ôê –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –°—Ç—Ä–µ–ª–µ—Ü –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/sagittarius/week/',
                                    'selector': '.article_prediction'},
    '‚ôë –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –ö–æ–∑–µ—Ä–æ–≥ –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/capricorn/week/',
                                    'selector': '.article_prediction'},
    '‚ôí –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –í–æ–¥–æ–ª–µ–π –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/aquarius/week/',
                                    'selector': '.article_prediction'},
    '‚ôì –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –†—ã–±—ã –Ω–∞ #–Ω–µ–¥–µ–ª—é:': {'url': 'https://horo.mail.ru/prediction/pisces/week/',
                                    'selector': '.article_prediction'},
}

previous_horoscopes = {url: '' for url in [data['url'] for data in signs.values()]}
def get_horoscope_for_sign(url, selector, paragraph_index=0):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    paragraphs = soup.select(selector)
    if paragraphs:
        if paragraph_index < len(paragraphs):
            return paragraphs[paragraph_index].text.strip()
    return "–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–µ –Ω–∞–π–¥–µ–Ω"
def parse_horoscope(url, selector):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    try:
        horoscope = soup.select(selector)[0].text
        return horoscope
    except (IndexError, requests.exceptions.RequestException) as e:
        return "–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–µ –Ω–∞–π–¥–µ–Ω"


def get_month_name(month_num):
    months_russian = ['–Ø–Ω–≤–∞—Ä—è', '–§–µ–≤—Ä–∞–ª—è', '–ú–∞—Ä—Ç–∞', '–ê–ø—Ä–µ–ª—è', '–ú–∞—è', '–ò—é–Ω—è', '–ò—é–ª—è', '–ê–≤–≥—É—Å—Ç–∞', '–°–µ–Ω—Ç—è–±—Ä—è', '–û–∫—Ç—è–±—Ä—è', '–ù–æ—è–±—Ä—è', '–î–µ–∫–∞–±—Ä—è']
    return months_russian[month_num - 1]


def get_moon_phase_info(url, selector):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    moon_phase_info = soup.select(selector)

    if moon_phase_info:
        text = moon_phase_info[0].text.strip()
        sentences = re.split(r'(?<!\w\.\w.)(?<![A-Z][a-z]\.)(?<=\.|\?)\s', text)
        filtered_sentences = sentences[1:]  # –í—ã–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–∞—á–∏–Ω–∞—è —Å–æ –≤—Ç–æ—Ä–æ–≥–æ
        return ' '.join(filtered_sentences)

    return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–∑–µ –ª—É–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"


def send_moon_phase_info():
    moon_url = "https://mirkosmosa.ru/lunar-calendar/phase-moon/lunar-day-today"
    moon_selector = ".div_table:nth-of-type(4)"
    moon_info = get_moon_phase_info(moon_url, moon_selector)
    today = datetime.now()
    day_selector = "h3:-soup-contains('–ª—É–Ω–Ω—ã–π –¥–µ–Ω—å')"
    day_response = requests.get(moon_url)
    day_soup = BeautifulSoup(day_response.text, 'html.parser')
    lunar_day = day_soup.select(day_selector)[0].text
    month_name = get_month_name(today.month)
    formatted_date = f"{today.day} {month_name.lower().capitalize()}"
    message_text = f'<u>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–∑–µ –ª—É–Ω—ãüåú:</u>\n<code>{formatted_date} - {lunar_day}</code>\n\n<span class="tg-spoiler"><i>{moon_info}</i></span>\n\n–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –ø–æ —Ä–∞—Å–∫–ª–∞–¥—É –¢–∞—Ä–æ: {TARO_BOT_USERNAME}'
    send_to_telegram_channel(message_text)


def get_moon_sign_info(url, selector):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    moon_sign_info = soup.select(selector)

    if moon_sign_info:
        text = moon_sign_info[0].text.strip()
        return text

    return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–Ω–∞–∫–µ –õ—É–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"


def send_moon_sign_info():
    moon_sign_url = "https://mirkosmosa.ru/lunar-calendar/phase-moon/lunar-day-today"
    moon_sign_selector = ".moon_desc_plus"
    moon_info = get_moon_sign_info(moon_sign_url, moon_sign_selector)
    message_text = f"üåô <u>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–Ω–∞–∫–µ –õ—É–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</u> üåô\n\n<i>{moon_info}</i>\n\n–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –ø–æ —Ä–∞—Å–∫–ª–∞–¥—É –¢–∞—Ä–æ: {TARO_BOT_USERNAME}"
    send_to_telegram_channel(message_text)

def get_day_of_week_info(url, selector):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    day_of_week_info = soup.select(selector)

    if day_of_week_info:
        text = day_of_week_info[0].text.strip()
        return text

    return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–Ω–µ –Ω–µ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

def send_day_of_week_info():
    day_of_week_url = "https://mirkosmosa.ru/lunar-calendar/phase-moon/lunar-day-today"
    day_of_week_selector = "h3:-soup-contains('–í–ª–∏—è–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (¬±)') + .moon_desc_normal"
    day_of_week_info = get_day_of_week_info(day_of_week_url, day_of_week_selector)
    message_text = f"üåü <u>–í–ª–∏—è–Ω–∏–∏ –¥–Ω—è –Ω–µ–¥–µ–ª–∏:</u> üåü\n\n<i>{day_of_week_info}</i>\n\n–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –ø–æ —Ä–∞—Å–∫–ª–∞–¥—É –¢–∞—Ä–æ: {TARO_BOT_USERNAME}"
    send_to_telegram_channel(message_text)
def send_to_telegram_channel(message):
    bot.send_message(CHANNEL_ID, message, parse_mode='HTML')

def send_weekly_horoscopes():
    for sign, data in weekly_signs.items():
        horoscope = parse_horoscope(data['url'], data['selector'])
        start_date = datetime.today().strftime('%d')
        end_date = (datetime.today() + timedelta(days=7)).strftime('%d.%m')
        message_text = f'<b>{sign} (—Å  –ø–æ 17.03):</b>\n{horoscope}\n\n–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –ø–æ —Ä–∞—Å–∫–ª–∞–¥—É –¢–∞—Ä–æ: {TARO_BOT_USERNAME}'
        send_to_telegram_channel(message_text)

def send_horoscopes():
    for sign, data in signs.items():
        if '(#–Ω–µ–¥–µ–ª—è)' not in sign:
            horoscope = get_horoscope_for_sign(data['url'], data['selector'])
            today_date = datetime.today().strftime('%d.%m.%Y')
            message_text = f"<b>{sign} {today_date}:</b>\n{horoscope}\n\n–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –ø–æ —Ä–∞—Å–∫–ª–∞–¥—É –¢–∞—Ä–æ: {TARO_BOT_USERNAME}"
            bot.send_message(CHANNEL_ID, message_text, parse_mode='HTML')
            previous_horoscopes[data['url']] = horoscope

schedule.every().friday.at("17:23").do(send_weekly_horoscopes)
schedule.every().day.at('05:00').do(send_horoscopes)
schedule.every().day.at('10:36').do(send_moon_phase_info)
schedule.every().day.at('10:34').do(send_moon_sign_info)
schedule.every().day.at('10:35').do(send_day_of_week_info)
while True:
    schedule.run_pending()
    time.sleep(1)

bot.polling()